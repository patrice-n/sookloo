name: Github Pages CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build_and_deploy_job:
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
          
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip' # caching pip dependencies

      - name: Install Packages
        run: pip install -r requirements.txt

      - name: Build Application
        run: cd web && mkdocs build

      - name: Fix permissions
        run: |
          chmod -v -R +rX "web/site/" | while read line; do
          echo "::warning title=Invalid file permissions automatically fixed::$line"
          done
      
      - name: Upload Pages artifact
        id: upload-pages-artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: web/site

      - name: Deploy to Github
        id: deploy
        uses: actions/deploy-pages@v4
